{"version":3,"sources":["components/CommentBox.js","actions/comments.js","constants/comments.js","components/CommentList.js","components/App.js","middlewares/ajax.js","reducers/comments.js","reducers/index.js","Root.js","index.js"],"names":["connect","addComment","comment","type","payload","fetchComments","axios","get","history","useHistory","useState","setComment","resetComment","useCallback","onFormSubmit","e","preventDefault","push","onCommentChange","value","target","onFetchComments","className","onSubmit","onChange","disabled","onClick","state","comments","deleteComment","index","onDeleteClick","map","key","App","exact","to","activeClassName","path","component","CommentBox","CommentList","dispatch","next","action","then","resp","newAction","initialState","Im","List","combineReducers","delete","fromJS","data","reduce","acc","name","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Root","children","initState","store","createStore","reducers","applyMiddleware","ajax","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.15cd71eb.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addComment, fetchComments } from 'actions/comments';\nimport { useHistory } from 'react-router-dom';\n\nconst CommentBox = ({ addComment, fetchComments }) => {\n  const history = useHistory();\n  const [comment, setComment] = useState('');\n\n  const resetComment = useCallback(() => {\n    setComment('');\n  }, []);\n\n  const onFormSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!comment) return;\n      addComment(comment);\n      resetComment();\n      history.push('/comments');\n    },\n    [resetComment, addComment, comment, history]\n  );\n\n  const onCommentChange = useCallback((e) => {\n    const value = e.target.value;\n    setComment(value);\n  }, []);\n\n  const onFetchComments = useCallback(() => {\n    fetchComments();\n    history.push('/comments');\n  }, [fetchComments, history]);\n\n  return (\n    <div className=\"comment-box\">\n      <form onSubmit={onFormSubmit}>\n        <h3>New Comment</h3>\n        <textarea value={comment} onChange={onCommentChange} />\n        <div className=\"btns\">\n          <input type=\"submit\" disabled={!comment} />\n          <input type=\"reset\" onClick={resetComment} />\n          <button className=\"fetch-comments\" onClick={onFetchComments}>\n            更多留言\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(null, { addComment, fetchComments })(CommentBox);\n","import * as cons from 'constants/comments';\nimport axios from 'axios';\n\nexport const addComment = (comment) => {\n  return {\n    type: cons.ADD_COMMENT,\n    payload: comment,\n  };\n};\n\nexport const deleteComment = (index) => {\n  return {\n    type: cons.DELETE_COMMENT,\n    index,\n  };\n};\n\nexport const fetchComments = () => {\n  const payload = axios.get(\n    'https://jsonplaceholder.typicode.com/comments?postId=1'\n  );\n  return {\n    type: cons.FETCH_COMMENTS,\n    payload,\n  };\n};\n","export const ADD_COMMENT = 'comments/add_comment';\nexport const DELETE_COMMENT = 'comments/delete_comment';\nexport const FETCH_COMMENTS = 'comments/fetch_comments';\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteComment } from 'actions/comments';\n\nconst CommentList = ({ comments, deleteComment }) => {\n  const onDeleteClick = useCallback(\n    (index) => {\n      deleteComment(index);\n    },\n    [deleteComment]\n  );\n  return (\n    <div className=\"comment-list\">\n      {comments.map((comment, index) => (\n        <div key={index} className=\"item\">\n          <div\n            className=\"delete-btn\"\n            onClick={() => {\n              onDeleteClick(index);\n            }}\n          />\n          {comment}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    comments: state.comments.comments,\n  }),\n  { deleteComment }\n)(CommentList);\n","import React from 'react';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport CommentBox from 'components/CommentBox';\nimport CommentList from 'components/CommentList';\nimport 'stylesheets/app.scss';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"nav\">\n        <NavLink exact to=\"/\" activeClassName=\"active\">\n          Home\n        </NavLink>\n        <NavLink to=\"/comments\" activeClassName=\"active\">\n          Comments\n        </NavLink>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={CommentBox} />\n        <Route path=\"/comments\" component={CommentList} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","export default ({ dispatch }) => (next) => (action) => {\n  const { payload } = action;\n  if (!payload || !payload.then) {\n    return next(action);\n  }\n  payload.then((resp) => {\n    const newAction = { ...action, payload: resp };\n    next(newAction);\n  });\n};\n","import Im from 'immutable';\nimport * as cons from 'constants/comments';\n\nconst initialState = {\n  comments: Im.List(['Hello React!']),\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case cons.ADD_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.push(action.payload),\n      };\n    case cons.DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.delete(action.index),\n      };\n    case cons.FETCH_COMMENTS:\n      return {\n        ...state,\n        comments: Im.fromJS(\n          action.payload.data.reduce(\n            (acc, comment) => acc.push(comment.name),\n            state.comments\n          )\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport comments from 'reducers/comments';\n\nexport default combineReducers({ comments });\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\n// import reduxPromise from 'redux-promise';\nimport ajax from 'middlewares/ajax';\nimport reducers from 'reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst Root = ({ children, initState = {} }) => {\n  const store = createStore(\n    reducers,\n    initState,\n    composeEnhancers(applyMiddleware(ajax))\n  );\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from 'components/App';\nimport Root from 'Root';\nimport 'stylesheets/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={App} />\n      </BrowserRouter>\n    </Root>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}